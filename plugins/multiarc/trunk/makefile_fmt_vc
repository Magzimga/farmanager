# nmake fmt_vc.mak FMT=name
!if "$(FMT)" == ""
!error An invalid FMT-target
!endif

NAME = $(FMT)

!IF "$(CPU)" == "AMD64"
OUTDIR = final.64.vc
!ELSE
OUTDIR = final.32.vc
!ENDIF

OBJDIR = $(OUTDIR)\obj
COMMON = ..\common
DLLNAME = $(NAME).fmt
DLLFULLNAME = $(OUTDIR)\Formats\$(DLLNAME)
DEF = $(NAME).def
MAP = $(OUTDIR)\Formats\$(NAME).map

!IF "$(CPU)" == "AMD64"
LIBS = $(COMMON)\libCRT64.lib $(OBJDIR)\pcre.lib chkstk.obj kernel32.lib user32.lib gdi32.lib advapi32.lib
CPP_PROJ=/nologo /D_FAR_USE_FARFINDDATA /c /Ox /Zp8 /J /Wp64 /GS- /Gr /GR- /EHs-c- /LD /Fo"$(OBJDIR)\\" /I"$(COMMON)" /I".\libpcre"
!ELSE
LIBS = $(COMMON)\libCRT.lib $(OBJDIR)\pcre.lib kernel32.lib user32.lib gdi32.lib advapi32.lib libcmt.lib
CPP_PROJ=/nologo /D_FAR_USE_FARFINDDATA /c /Zp1 /Ox /J /Gr /GR- /EHs-c- /LD /Fo"$(OBJDIR)\\" /I"$(COMMON)" /I".\libpcre"
!ENDIF

LINK_FLAGS=/nologo /dll /release /merge:.rdata=.text /opt:nowin98 /noentry /nodefaultlib /def:"$(DEF)" /map:"$(MAP)" /out:"$(DLLFULLNAME)" $(LIBS)

LINK_OBJS = $(OBJDIR)\$(NAME).obj \
$(OBJDIR)\$(NAME).res

ALL: $(OUTDIR) $(OBJDIR) $(OUTDIR)\Formats $(DLLFULLNAME)

$(DLLFULLNAME) : $(LINK_OBJS)
	link @<<
	$(LINK_FLAGS) $(LINK_OBJS)
<<

.cpp{$(OBJDIR)}.obj::
	cl @<<
	$(CPP_PROJ) $<
<<

$(OBJDIR)\$(NAME).res: $(NAME).rc $(COMMON)\farversion.hpp
	@rc /I"$(COMMON)" /fo"$(OBJDIR)\$(NAME).res" $(NAME).rc

$(OUTDIR)\Formats: $(OUTDIR)
	@if not exist "$(OUTDIR)\Formats\$(NULL)" mkdir "$(OUTDIR)\Formats"

$(OBJDIR): $(OUTDIR)
	@if not exist "$(OBJDIR)\$(NULL)" mkdir "$(OBJDIR)"

$(OUTDIR):
	@if not exist "$(OUTDIR)\$(NULL)" mkdir "$(OUTDIR)"
